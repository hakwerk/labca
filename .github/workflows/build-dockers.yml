name: Build Docker Images

on:
  push:
    branches:
      - "**"
    tags:
      - "v*"
  pull_request:
    branches:
      - "main"
  workflow_dispatch:

jobs:
  build-docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - image: ghcr.io/hakwerk/labca-gui
            dockerfile: build/Dockerfile-gui
            label: org.opencontainers.image.title=labca-gui
          - image: ghcr.io/hakwerk/labca-boulder
            dockerfile: build/Dockerfile-boulder
            label: org.opencontainers.image.title=labca-boulder
          - image: ghcr.io/hakwerk/labca-control
            dockerfile: build/Dockerfile-control
            label: org.opencontainers.image.title=labca-control

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ matrix.image }}
          labels: ${{ matrix.label }}
          tags: |
            type=schedule,pattern={{date 'YYYYMMDD'}}
            type=match,pattern=v(.*),group=1
            type=edge,branch=$repo.default_branch
            type=ref,event=branch
            type=ref,event=pr
            type=sha

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Build binaries
        run: |
          build/build.sh

      - name: DEBUG
        run: |
          git status
          git diff build/docker-compose.yml

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.ACTION_PAT }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: build
          file: ${{ matrix.dockerfile }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}

